{"version":3,"sources":["components/Header/Header.module.scss","components/Projects/components/Project/Project.module.scss","foundation/App/App.module.scss","components/Header/components/Title/Title.module.scss","components/Projects/Projects.module.scss","foundation/serviceWorker/index.ts","components/Header/components/Title/Title.tsx","components/Header/Header.tsx","components/Projects/components/Project/Project.tsx","components/Projects/Projects.tsx","foundation/App/App.tsx","index.tsx"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","then","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","Title","children","lettersMarkup","split","map","letter","idx","className","styles","LetterBox","role","aria-hidden","Letter","data-shadow","aria-label","Header","marquee","subheading","NameBox","Name","First","Second","SubHeading","description","links","label","url","target","rel","Project","icon","color","title","IconContainer","Icon","style","Text","Description","Projects","projects","project","App","Section","Heading","projectData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.503db6a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1CTzX\",\"NameBox\":\"Header_NameBox__2n62h\",\"Name\":\"Header_Name__3-Q06\",\"First\":\"Header_First__3wQLp\",\"Second\":\"Header_Second__3snCz\",\"scroll-first\":\"Header_scroll-first__24s_3\",\"SubHeading\":\"Header_SubHeading__2B16j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Project\":\"Project_Project__qD3K6\",\"Icon\":\"Project_Icon__2o3pT\",\"spin\":\"Project_spin__BZGSd\",\"depth\":\"Project_depth__1o78Z\",\"Title\":\"Project_Title__2p_9i\",\"swing\":\"Project_swing__3a5bM\",\"Description\":\"Project_Description__36wOj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3owNu\",\"Section\":\"App_Section__3UGfa\",\"Heading\":\"App_Heading__3MBJZ\",\"rainbow\":\"App_rainbow__TLt6L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LetterBox\":\"Title_LetterBox__1r3bW\",\"Letter\":\"Title_Letter__2B2DG\",\"rainbow\":\"Title_rainbow__1fWaj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Projects\":\"Projects_Projects__3BrIo\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nimport styles from './Title.module.scss';\n\ntype Props = {\n  children: string;\n};\n\nexport default function Title({children}: Props) {\n  const lettersMarkup = children.split('').map((letter, idx) => (\n    <div key={idx} className={styles.LetterBox} role=\"presentation\" aria-hidden=\"true\">\n      <span className={styles.Letter} data-shadow={letter}>\n        {letter}\n      </span>\n    </div>\n  ));\n\n  return <h1 aria-label={children}>{lettersMarkup}</h1>;\n}\n","import React from 'react';\n\nimport {Title} from './components';\n\nimport styles from './Header.module.scss';\n\ntype Props = {\n  marquee: string[];\n  subheading: {\n    description: string;\n    links: {\n      label: string;\n      url: string;\n    }[];\n  };\n};\n\nexport default function Header({marquee, subheading}: Props) {\n  return (\n    <header className={styles.Header}>\n      <div className={styles.NameBox}>\n        <div className={styles.Name}>\n          <div className={styles.First}>\n            <Title>{marquee[0]}</Title>\n          </div>\n          <div className={styles.Second}>\n            <Title>{marquee[1]}</Title>\n          </div>\n        </div>\n      </div>\n      <div className={styles.SubHeading}>\n        <p>{subheading.description}</p>\n        <ul>\n          {subheading.links.map(({label, url}) => (\n            <li key={url}>\n              <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {label}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </header>\n  );\n}\n","import React from 'react';\n\nimport styles from './Project.module.scss';\n\ntype Props = {\n  icon: string;\n  color?: string;\n  title: string;\n  description: string;\n  url: string;\n};\n\nexport default function Project({icon, color, title, description, url}: Props) {\n  return (\n    <a className={styles.Project} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n      <div className={styles.IconContainer} role=\"presentation\">\n        <div className={styles.Icon} style={{color: color ? color : 'inherit'}}>\n          {icon}\n        </div>\n      </div>\n      <div className={styles.Text}>\n        <h3 className={styles.Title}>{title}</h3>\n        <p className={styles.Description}>{description}</p>\n      </div>\n    </a>\n  );\n}\n","import React from 'react';\nimport styles from './Projects.module.scss';\n\nimport {Project} from './components';\n\ninterface Props {\n  projects: {\n    icon: string;\n    title: string;\n    description: string;\n    url: string;\n    color?: string;\n  }[];\n}\n\nexport default function Projects({projects}: Props) {\n  return (\n    <div className={styles.Projects}>\n      {projects.map(project => (\n        <Project key={project.title} {...project} />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport styles from './App.module.scss';\n\nimport {Header, Projects} from '../../components';\n\nimport projectData from '../../data/projects.json';\n\nexport default function App() {\n  return (\n    <div className={styles.App}>\n      <Header\n        marquee={['chrisbolton', 'cbolton.net']}\n        subheading={{\n          description: 'Building on and off the internet.',\n          links: [\n            {label: 'Work', url: 'https://www.linkedin.com/in/cboltt'},\n            {\n              label: 'Writing',\n              url: 'http://medium.com/@cboltt'\n            },\n            {\n              label: 'Code',\n              url: 'http://github.com/cboltt'\n            }\n          ]\n        }}\n      />\n      <div className={styles.Section}>\n        <h2 className={styles.Heading}>Projects</h2>\n        <Projects projects={projectData} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App, serviceWorker} from './foundation';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('ui-root'));\n\n// TODO: Enable this in the future (http://bit.ly/CRA-PWA)\nserviceWorker.unregister();\n"],"sourceRoot":""}